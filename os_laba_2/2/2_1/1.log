
# Системный вызов fork() создаёт дочерний процесс, который является копией родительского.

# Адресное пространство:
# 	Каждый процесс после fork() получает независимую копию памяти родителя. 
# 	Изменения переменных в одном процессе не влияют на другой.

#Конкуренция за CPU:
#	Планировщик ОС переключает контекст между процессами, 
#	создавая иллюзию параллельного выполнения. 
#	Наличие wait() в родителе гарантирует, что он завершится после потомка.

# Системные вызовы:

#        fork() создаёт процессы.

#        wait() синхронизирует выполнение.

#        exit() завершает процесс явно.

